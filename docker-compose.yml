version: '3.9'
services:
  #bjorn run
  bjorn:
    image: andersenlabapps/outbreak-info-bjorn
    container_name: bjorn
    build:
      context: .
      dockerfile: Dockerfile-bjorn
    profiles: ["new-data", "all"]  
    volumes:
      - type: bind
        source: ./bjorn/
        target: /home/chrissy/outbreak.info/bjorn
   
  #es from docker image single node
  es:
    image: andersenlabapps/outbreak-info-es
    container_name: es
    environment:
      - node.name=es
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es
      - bootstrap.memory_lock:true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    build:
      context: .
      dockerfile: Dockerfile-es
    ports:
      - "9200:9200"
    volumes:
      - data01:/usr/share/elasticsearch/data
    networks:
      - some-net
    healthcheck:
      test: ["CMD", "curl", "http://35.222.182.12:9200/_cat/health"]
      interval: 30s
      timeout: 10s
      retries: 10
    profiles: ["ingest-data", "website", "all", "single-node"]

  es02:
    image: andersenlabapps/outbreak-info-es
    container_name: es02
    environment:
      - node.name=es02
      - discovery.seed_hosts=es
      - cluster.initial_master_nodes=es
      - bootstrap.memory_lock:true
      - "ES_JAVA_OPTS=-Xms10g -Xmx10g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    build:
      context: .
      dockerfile: Dockerfile-es
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - some-net
    profiles: ["ingest-data", "website", "all"]
 
  #ingest the es db
  ingest:
    logging:
      driver: none
    image: andersenlabapps/outbreak-info-ingest
    container_name: ingest
    build:
      context: .
      dockerfile: Dockerfile-index
    volumes:
      - type: bind
        source: /home/chrissy/outbreak.info/bjorn/test/new_api_data.json
        target: /new_api_data.json
    restart: on-failure:10
    depends_on:
      es:
        condition: service_healthy
    networks:
      - some-net 
    profiles: ["ingest-data", "all", "ingest-only", "single-node"]
 
  #start up the api
  tornado:
    image: andersenlabapps/outbreak-info-tornado
    container_name: tornado
    build:
      context: .
      dockerfile: Dockerfile-server
    restart: on-failure:10
    healthcheck:
      test: ["CMD", "curl", "http://35.222.182.12:8000"]
    depends_on:
      es:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - some-net
    profiles: ["ingest-data", "website", "all", "single-node"]

  #start up the local build
  localbuild:
    image: andersenlabapps/outbreak-info-website
    container_name: localbuild
    build:
      context: .
      dockerfile: Dockerfile-client  
    restart: on-failure:10
    depends_on:
      es:
        condition: service_healthy
      tornado:
        condition: service_healthy
    networks:
      - some-net 
    ports:
      - "5000:5000"
    profiles: ["ingest-data", "website", "all", "single-node"]

volumes:
  data01:
    driver: local
  data02:
    driver: local
networks:
  some-net:
    driver: bridge
      
